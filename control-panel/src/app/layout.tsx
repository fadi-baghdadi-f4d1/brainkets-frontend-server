"use client";
import { Poppins } from 'next/font/google';
import './globals.css';
import ConditionalLayout from './ConditionalLayout';
import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { ModalProvider } from './context/ModalContext';
import ModalWrapper from './context/ModalWrapper';
import ReduxProvider from './context/ReduxProvider';

const poppins = Poppins({
    subsets: ['latin'],
    weight: ['400', '500', '600', '700'],
});

// export const metadata = {
//   title: 'Beeflex',
//   description: 'Generated by create next app',
// };

interface RootLayoutProps {
    children: React.ReactNode;
    params: { locale: string };
}

export default function RootLayout({ children, params }: RootLayoutProps) {
    const { locale = 'en' } = params; // Fallback to 'en' if locale is not provided
    // const messages = await getMessages({ locale });

    const isRtl = locale === 'ar';

    return (
        <html lang={locale} dir={isRtl ? 'rtl' : 'ltr'}>
        <body className={poppins.className}>
        <ReduxProvider>
            <ModalProvider>
                <NextIntlClientProvider locale={locale}>
                    <ConditionalLayout locale={locale}>
                        {children}
                        <ModalWrapper />
                    </ConditionalLayout>
                </NextIntlClientProvider>
            </ModalProvider>
        </ReduxProvider>
        </body>
        </html>
    );
}
